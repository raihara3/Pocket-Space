name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

env:
  OWNER: raihara3
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PASS: ${{ secrets.REDIS_PASS }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: yarn

      - name: Run ESLint
        run: yarn run lint

      - name: Run Jest
        run: yarn test

  publish:
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: communication-webar
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/docker-build
          key: ${{ runner.os }}-communication-webar-docker-${{ hashFiles('Dockerfile') }}-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-communication-webar-docker-
      - uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - run: |
          IMAGE_PATH=ghcr.io/${OWNER}/${IMAGE_NAME}
          TAG=${GITHUB_REF##*/}
          opt=''
          [ -d /home/runner/.cache/docker-build ] && opt='--cache-from type=local,src=/home/runner/.cache/docker-build'
          docker login ghcr.io -u $OWNER -p ${{ secrets.CR_PAT }}
          docker buildx build --output type=docker,name=$IMAGE_PATH:$TAG,push=false ${opt} --cache-to type=local,mode=max,dest=/home/runner/.cache/docker-build .
          docker push $IMAGE_PATH:$TAG

  deploy:
    needs: publish
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Push to server
        uses: appleboy/ssh-action@v0.1.4
        with:
          host: ${{ secrets.SERVER_IP }}
          port: ${{ secrets.SERVER_PORT }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            git pull origin master
            docker pull ghcr.io/raihara3/communication-webar:master
            docker stop communication-webar_nextjs_1
            docker-compose up -d nextjs
            docker image prune -f

  lighthouse-check:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - run: mkdir /tmp/artifacts
      - name: Run Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          accessToken: ${{ secrets.LIGHTHOUSE_CHECK_GITHUB_ACCESS_TOKEN }}
          author: ${{ github.actor }}
          # awsAccessKeyId: ${{ secrets.LIGHTHOUSE_CHECK_AWS_ACCESS_KEY_ID }}
          # awsBucket: ${{ secrets.LIGHTHOUSE_CHECK_AWS_BUCKET }}
          # awsRegion: ${{ secrets.LIGHTHOUSE_CHECK_AWS_REGION }}
          # awsSecretAccessKey: ${{ secrets.LIGHTHOUSE_CHECK_AWS_SECRET_ACCESS_KEY }}
          branch: ${{ github.ref }}
          outputDirectory: /tmp/artifacts
          urls: 'https://raihara3.fun,https://raihara3.fun/remote/call'
          sha: ${{ github.sha }}
          slackWebhookUrl: ${{ secrets.LIGHTHOUSE_CHECK_WEBHOOK_URL }}
      - name: Upload artifacts
        uses: actions/upload-artifact@master
        with:
          name: Lighthouse reports
          path: /tmp/artifacts

  slackNotification:
    needs: deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

env:
  OWNER: raihara3
  REDIS_HOST: ${{ secrets.REDIS_HOST }}
  REDIS_PASS: ${{ secrets.REDIS_PASS }}
  REDIS_PORT: ${{ secrets.REDIS_PORT }}

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Install modules
        run: yarn

      - name: Run ESLint & Stylelint
        run: yarn run lint

      - name: Run Jest
        run: yarn test

      - name: Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Test Failure
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

  publish:
    needs: test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: webar-oekaki-chat
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /home/runner/.cache/docker-build
          key: ${{ runner.os }}-webar-oekaki-chat-docker-${{ hashFiles('Dockerfile') }}-${{ hashFiles('package.json') }}-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-webar-oekaki-chat-docker-
      - uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - run: |
          IMAGE_PATH=ghcr.io/${OWNER}/${IMAGE_NAME}
          TAG=${GITHUB_REF##*/}
          opt=''
          [ -d /home/runner/.cache/docker-build ] && opt='--cache-from type=local,src=/home/runner/.cache/docker-build'
          docker login ghcr.io -u $OWNER -p ${{ secrets.CR_PAT }}
          docker buildx build --output type=docker,name=$IMAGE_PATH:$TAG,push=false ${opt} --cache-to type=local,mode=max,dest=/home/runner/.cache/docker-build .
          docker push $IMAGE_PATH:$TAG

      - name: Slack Notification on Success
        if: success()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Publish Success
          SLACK_COLOR: good
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}

      - name: Slack Notification on Failure
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_TITLE: Publish Failure
          SLACK_COLOR: danger
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
